// backend/services/claudeService.js
const { Anthropic } = require('@anthropic-ai/sdk');

// Initialize the Anthropic client
const anthropic = new Anthropic({
  apiKey: process.env.ANTHROPIC_API_KEY,
});

// Grammar analysis using Claude Haiku
async function checkGrammarWithClaude(text) {
  try {
    console.log("Calling Claude for grammar analysis...");
    const response = await anthropic.messages.create({
      model: "claude-3-haiku-20240307",
      max_tokens: 1000,
      system: `You are a writing tutor for students. Analyze the text for grammar, spelling, punctuation, and style issues. 
      Focus on providing helpful, educational feedback that would help young writers improve.
      Return your analysis in JSON format with these fields:
      {
        "errors": [{"original": "text with error", "correction": "corrected text", "explanation": "why this is an error"}],
        "score": 0-100 score evaluating grammar quality,
        "summary": "kid-friendly summary of grammar strengths and areas to improve",
        "correctedText": "full corrected version of the text"
      }`,
      messages: [{ role: "user", content: text }]
    });
    
    console.log("Claude grammar response received");
    
    // Parse the JSON response
    const result = JSON.parse(response.content[0].text);
    return result;
  } catch (error) {
    console.error('Claude grammar analysis error:', error);
    throw error;
  }
}

// Character analysis using Claude Haiku
async function analyzeCharactersWithClaude(text) {
  try {
    console.log("Calling Claude for character analysis...");
    const response = await anthropic.messages.create({
      model: "claude-3-haiku-20240307",
      max_tokens: 1000,
      system: `You are a literary character analyst for young writers. Identify characters in this story and analyze them.
      Return your analysis in JSON format with these fields:
      {
        "characters": [
          {"name": "character name", "role": "Protagonist/Antagonist/Supporting", "traits": "personality traits", "consistency": "High/Medium/Low"}
        ],
        "score": 0-100 score evaluating character development,
        "suggestions": "kid-friendly suggestions for improving characters"
      }`,
      messages: [{ role: "user", content: text }]
    });
    
    console.log("Claude character response received");
    
    // Parse the JSON response
    const result = JSON.parse(response.content[0].text);
    return result;
  } catch (error) {
    console.error('Claude character analysis error:', error);
    throw error;
  }
}

// AI content detection using Claude Opus for higher accuracy
async function detectAIContentWithClaude(text) {
  try {
    console.log("Calling Claude Opus for AI detection...");
    const response = await anthropic.messages.create({
      model: "claude-3-opus-20240229", // Using Opus for this critical feature
      max_tokens: 500,
      system: `You are an AI content detector for an educational platform. Young students submit their writing and you need to determine 
      how likely it is that the text was generated by AI. Return your analysis in JSON format with these fields:
      {
        "score": 0-100 (higher means more likely AI-generated, should be under 7 for human writing),
        "reasoning": "explanation of your evaluation",
        "confidence": 0-1 representing your confidence in this assessment
      }`,
      messages: [{ role: "user", content: text }]
    });
    
    console.log("Claude Opus AI detection response received");
    
    // Parse the JSON response
    const result = JSON.parse(response.content[0].text);
    return result;
  } catch (error) {
    console.error('Claude AI detection error:', error);
    throw error;
  }
}

module.exports = {
  checkGrammarWithClaude,
  analyzeCharactersWithClaude,
  detectAIContentWithClaude
};
