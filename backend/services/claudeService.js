// services/claudeService.js
const { Anthropic } = require('@anthropic-ai/sdk');

// Initialize Anthropic client with proper error handling
let anthropic = null;

try {
  const apiKey = process.env.ANTHROPIC_API_KEY;
  if (apiKey) {
    anthropic = new Anthropic({ apiKey });
    console.log('Anthropic client initialized successfully');
  } else {
    console.warn('ANTHROPIC_API_KEY not set - Claude features will be disabled');
  }
} catch (error) {
  console.error('Failed to initialize Anthropic client:', error.message);
}

// Grammar analysis using Claude
async function checkGrammarWithClaude(text) {
  try {
    if (!anthropic) {
      throw new Error('Anthropic client not available');
    }
    
    const truncatedText = text.length > 8000 ? text.substring(0, 8000) + '...' : text;
    
    const response = await anthropic.messages.create({
      model: "claude-3-haiku-20240307",
      max_tokens: 1000,
      system: `You are a writing tutor. Analyze the text for grammar and style issues. 
      Return JSON format with these fields:
      {
        "errors": [{"original": "text with error", "correction": "corrected text", "explanation": "explanation"}],
        "score": 0-100 score,
        "summary": "summary of issues",
        "correctedText": "corrected version"
      }`,
      messages: [{ role: "user", content: truncatedText }]
    });
    
    const result = JSON.parse(response.content[0].text);
    return result;
  } catch (error) {
    console.error('Grammar check error:', error);
    throw error;
  }
}

// Character analysis using Claude
async function analyzeCharactersWithClaude(text) {
  try {
    if (!anthropic) {
      throw new Error('Anthropic client not available');
    }
    
    const truncatedText = text.length > 8000 ? text.substring(0, 8000) + '...' : text;
    
    const response = await anthropic.messages.create({
      model: "claude-3-haiku-20240307",
      max_tokens: 1000,
      system: `Identify characters in this story and analyze them.
      Return JSON format with these fields:
      {
        "characters": [
          {"name": "character name", "role": "role", "traits": "traits", "consistency": "High/Medium/Low"}
        ],
        "score": 0-100 score,
        "suggestions": "suggestions for improvement"
      }`,
      messages: [{ role: "user", content: truncatedText }]
    });
    
    const result = JSON.parse(response.content[0].text);
    return result;
  } catch (error) {
    console.error('Character analysis error:', error);
    throw error;
  }
}

// AI content detection
async function detectAIContentWithClaude(text) {
  try {
    if (!anthropic) {
      throw new Error('Anthropic client not available');
    }
    
    const truncatedText = text.length > 10000 ? text.substring(0, 10000) + '...' : text;
    
    const response = await anthropic.messages.create({
      model: "claude-3-haiku-20240307",
      max_tokens: 500,
      system: `Determine how likely the text was generated by AI. Return JSON format:
      {
        "score": 0-100 (higher means more likely AI-generated),
        "reasoning": "explanation",
        "confidence": 0-1 confidence value
      }`,
      messages: [{ role: "user", content: truncatedText }]
    });
    
    const result = JSON.parse(response.content[0].text);
    return result;
  } catch (error) {
    console.error('AI detection error:', error);
    throw error;
  }
}

module.exports = {
  checkGrammarWithClaude,
  analyzeCharactersWithClaude,
  detectAIContentWithClaude
};
